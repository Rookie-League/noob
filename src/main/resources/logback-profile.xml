<?xml version="1.0" encoding="UTF8"?>
<configuration scan="false" scanPeriod="10 seconds" debug="false">
    <!--Spring Boot默认的logback配置-->
    <!--<include resource="org/springframework/boot/logging/logback/base.xml"/>-->
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
    <property name="LOG_HOME" value="logs/noob"/>
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
    <property name="CONSOLE_LOG_PATTERN" value="%boldGreen(%-5p) |-%d{HH:mm:ss.SSS}-| %boldBlue(%-22.22t)|-%boldMagenta(%c[%L]) %msg%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="DEBUG_FILE_LOG_PATTERN" value="%boldCyan(%-5p) |-%d{HH:mm:ss.SSS}-| %boldCyan(%-22.22t)|-%boldMagenta(%c[%L]) %msg%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="INFO_FILE_LOG_PATTERN" value="%boldBlue(%-5p) |-%d{HH:mm:ss.SSS}-| %boldBlue(%-22.22t)|-%boldMagenta(%c[%L]) %msg%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="WARN_FILE_LOG_PATTERN" value="%boldYellow(%-5p) |-%d{HH:mm:ss.SSS}-| %boldYellow(%-22.22t)|-%boldMagenta(%c[%L]) %msg%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="ERROR_FILE_LOG_PATTERN" value="%boldRed(%-5p) |-%d{HH:mm:ss.SSS}-| %boldRed(%-22.22t)|-%boldMagenta(%c[%L]) %msg%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <springProfile name="dev,test">
        <!-- 控制台输出 -->
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <!-- 日志输出编码 -->
            <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>INFO</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>-->
            <encoder>
                <pattern>${CONSOLE_LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
        </appender>
        <!-- 日志输出级别 -->
        <root level="INFO">
            <appender-ref ref="STDOUT"/>
            <!--
            <appender-ref ref="stash"/>
            <appender-ref ref="debugFile"/>
            <appender-ref ref="infoFile"/>
            <appender-ref ref="warnFile"/>
            <appender-ref ref="errorFile"/>
            -->
        </root>
    </springProfile>
    <springProfile name="pre,pro">
        <!-- 按照每天生成日志文件 -->
        <appender name="debugFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_HOME}/debug/debug.log</file>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>DEBUG</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!--日志文件输出的文件名 -->
                <FileNamePattern>${LOG_HOME}/debug/debug.%d.%i.log.zip</FileNamePattern>
                <!-- or whenever the file size reaches 100MB -->
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>100MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                <!-- 最长日志存储时间 -->
                <MaxHistory>30</MaxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${DEBUG_FILE_LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
        </appender>
        <!-- 按照每天生成日志文件 -->
        <appender name="infoFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_HOME}/info/info.log</file>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>INFO</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!--日志文件输出的文件名 -->
                <FileNamePattern>${LOG_HOME}/info/info.%d.%i.log.zip</FileNamePattern>
                <!-- or whenever the file size reaches 100MB -->
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>100MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                <!-- 最长日志存储时间 -->
                <MaxHistory>30</MaxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${INFO_FILE_LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
        </appender>
        <!-- 按照每天生成日志文件 -->
        <appender name="warnFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_HOME}/warn/warn.log</file>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>WARN</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!--日志文件输出的文件名 -->
                <FileNamePattern>${LOG_HOME}/warn/warn.%d.%i.log.zip</FileNamePattern>
                <!-- or whenever the file size reaches 100MB -->
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>100MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                <!-- 最长日志存储时间 -->
                <MaxHistory>30</MaxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${WARN_FILE_LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
        </appender>
        <!-- 按照每天生成日志文件 -->
        <appender name="errorFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_HOME}/error/error.log</file>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>ERROR</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!--日志文件输出的文件名 -->
                <FileNamePattern>${LOG_HOME}/error/error.%d.%i.log.zip</FileNamePattern>
                <!-- or whenever the file size reaches 100MB -->
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>100MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                <!-- 最长日志存储时间 -->
                <MaxHistory>30</MaxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${ERROR_FILE_LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
        </appender>
        <!-- encoder is required -->
        <!--<appender name="stash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
            <destination>101.37.35.46:9998</destination>
            <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder"/>
        </appender>-->
        <!--日志异步到数据库 -->
        <!--
        <appender name="DB" class="ch.qos.logback.classic.db.DBAppender">
            <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
                <dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">
                    <driverClass>com.mysql.jdbc.Driver</driverClass>
                    <url>jdbc:mysql://127.0.0.1:3306/databaseName</url>
                    <user>root</user>
                    <password>root</password>
                </dataSource>
            </connectionSource>
        </appender>
         -->
        <!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
        <!--
        <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" />
        <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG" />
        <logger name="org.hibernate.SQL" level="DEBUG" />
        <logger name="org.hibernate.engine.QueryParameters" level="DEBUG" />
        <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" />
         -->
        <!-- 日志输出级别 -->
        <root level="INFO">
            <!--
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="stash"/>
            -->
            <appender-ref ref="debugFile"/>
            <appender-ref ref="infoFile"/>
            <appender-ref ref="warnFile"/>
            <appender-ref ref="errorFile"/>
        </root>
    </springProfile>
</configuration>